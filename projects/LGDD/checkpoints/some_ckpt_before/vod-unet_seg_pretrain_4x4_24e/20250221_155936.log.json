{"env_info": "sys.platform: linux\nPython: 3.7.16 (default, Jan 17 2023, 22:20:44) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3: NVIDIA GeForce RTX 4090\nCUDA_HOME: /home/yq/cuda-11.6\nNVCC: Build cuda_11.6.r11.6/compiler.30794723_0\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.9.1+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.1+cu111\nOpenCV: 4.11.0\nMMCV: 1.4.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.14.0\nMMSegmentation: 0.14.1\nMMDetection3D: 0.17.0+", "config": "custom_imports = dict(imports=['projects.LGDD.mmdet3d_plugin'])\ndataset_type = 'VoDDataset'\ndata_root = 'data/VoD/radar_5frames/'\nclass_names = ['Pedestrian', 'Cyclist', 'Car']\ninput_modality = dict(use_lidar=True, use_camera=True)\nfile_client_args = dict(backend='disk')\npoint_cloud_range = [0, -25.6, -3, 51.2, 25.6, 2]\npost_center_range = [-10, -35.6, -8, 61.2, 35.6, 7]\nvoxel_size = [0.32, 0.32, 5.76]\nseg_voxel_size = [0.16, 0.16, 0.24]\nseg_score_thresh = [0.25, 0.25, 0.3]\ngrid_config = dict(\n    xbound=[0, 51.2, 0.32],\n    ybound=[-25.6, 25.6, 0.32],\n    zbound=[-3, 2, 5.76],\n    dbound=[1.0, 49, 1.0])\ncode_weights = [2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\ncode_size = 8\nD_bins = 48\nSAVE_INTERVALS = 100\nframework_type = 'student'\nbox3d_supervision = dict(use=True, weight=1.0)\ndepth_supervision = dict(use=False, weight=1.0)\nmsk2d_supervision = dict(use=False, weight=1.0)\nprops_supervision = dict(use=False, weight=1.0)\ndepth_complet = dict(point_depth=True, extra_depth=False)\ncamera_stream = dict(aware=dict(depth=True, pixel=True))\nfocus_modules = dict(use=False, weight=0.1)\ndistill_setts = dict(\n    use=False,\n    semi=False,\n    DCN=False,\n    QPF_with_GNN=False,\n    QFP_with_segmentor=True,\n    point_supervision=dict(use=False, weight=0.1),\n    radar_supervision=dict(use=False, weight=0.1),\n    teacher_cfg='projects/LGDD/configs/vod-LGDD_teachers_2x4_12e.py',\n    checkpoint='work_dirs/vod-LGDD_teachers_2x4_12e/epoch_12.pth')\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\nida_aug_conf = dict(\n    resize_lim=(0.5, 0.7),\n    final_dim=(800, 1280),\n    final_dim_test=(800, 1280),\n    bot_pct_lim=(0.0, 0.0),\n    top_pct_lim=(0.0, 0.3),\n    rot_lim=(-2.7, 2.7),\n    rand_flip=True)\nbda_aug_conf = dict(\n    rot_range=(-0.3925, 0.3925),\n    scale_ratio_range=(0.95, 1.05),\n    translation_std=(0.0, 0.0, 0.0),\n    flip_dx_ratio=0.0,\n    flip_dy_ratio=0.5)\nbev_h_ = 160\nbev_w_ = 160\nimg_channels = 256\nrad_channels = 384\ndownsample = 8\n_dim_ = 256\nmodel = dict(\n    type='VoteSegmentor',\n    voxel_layer=dict(\n        voxel_size=[0.16, 0.16, 0.24],\n        max_num_points=-1,\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2],\n        max_voxels=(-1, -1)),\n    voxel_encoder=dict(\n        type='CustomDynamicScatterVFE',\n        in_channels=5,\n        feat_channels=[64, 64],\n        voxel_size=[0.16, 0.16, 0.24],\n        with_cluster_center=True,\n        with_voxel_center=True,\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2],\n        norm_cfg=dict(type='BN1d', eps=0.001, momentum=0.01),\n        unique_once=True),\n    middle_encoder=dict(type='PseudoMiddleEncoder'),\n    backbone=dict(\n        type='SimpleSparseUNet',\n        in_channels=64,\n        sparse_shape=[32, 640, 640],\n        order=('conv', 'norm', 'act'),\n        norm_cfg=dict(type='BN1d', eps=0.001, momentum=0.01),\n        base_channels=64,\n        output_channels=128,\n        encoder_channels=((64, ), (64, 64, 64), (64, 64, 64), (128, 128, 128),\n                          (256, 256, 256)),\n        encoder_paddings=((1, ), (1, 1, 1), (1, 1, 1), ((0, 1, 1), 1, 1),\n                          (1, 1, 1)),\n        decoder_channels=((256, 256, 128), (128, 128, 64), (64, 64, 64),\n                          (64, 64, 64), (64, 64, 64)),\n        decoder_paddings=((1, 1), (1, 0), (1, 0), (0, 0), (0, 1))),\n    decode_neck=dict(\n        type='Voxel2PointScatterNeck',\n        voxel_size=[0.16, 0.16, 0.24],\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2],\n        with_xyz=False),\n    segmentation_head=dict(\n        type='VoteSegHead',\n        in_channel=64,\n        hidden_dims=[128, 128],\n        num_classes=3,\n        dropout_ratio=0.0,\n        conv_cfg=dict(type='Conv1d'),\n        norm_cfg=dict(type='BN1d'),\n        act_cfg=dict(type='ReLU'),\n        loss_decode=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=3.0,\n            alpha=0.8,\n            loss_weight=1.0),\n        loss_vote=dict(type='L1Loss', loss_weight=1.0)),\n    train_cfg=dict(\n        point_loss=True,\n        score_thresh=[0.25, 0.25, 0.3],\n        class_names=['Pedestrian', 'Cyclist', 'Car'],\n        centroid_offset=False),\n    meta_info=dict(\n        figures_path='./work_dirs/vod-unet_seg_pretrain_4x4_24e/figures_path',\n        project_name='vod-unet_seg_pretrain_4x4_24e'))\ntrain_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=7,\n        use_dim=[0, 1, 2, 3, 5]),\n    dict(\n        type='LoadAnnotations3D',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_bbox=False,\n        with_label=False),\n    dict(\n        type='GlobalRotScaleTransFlipAll',\n        bda_aug_conf=dict(\n            rot_range=(-0.3925, 0.3925),\n            scale_ratio_range=(0.95, 1.05),\n            translation_std=(0.0, 0.0, 0.0),\n            flip_dx_ratio=0.0,\n            flip_dy_ratio=0.5),\n        is_train=True),\n    dict(\n        type='RandomJitterPoints',\n        jitter_std=[0.01, 0.01, 0.01],\n        clip_range=[-0.05, 0.05]),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car']),\n    dict(\n        type='CustomCollect3D',\n        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=7,\n        use_dim=[0, 1, 2, 3, 5]),\n    dict(\n        type='LoadAnnotations3D',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_bbox=False,\n        with_label=False),\n    dict(\n        type='GlobalRotScaleTransFlipAll',\n        bda_aug_conf=dict(\n            rot_range=(-0.3925, 0.3925),\n            scale_ratio_range=(0.95, 1.05),\n            translation_std=(0.0, 0.0, 0.0),\n            flip_dx_ratio=0.0,\n            flip_dy_ratio=0.5),\n        is_train=False),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car'],\n        with_label=False),\n    dict(\n        type='CustomCollect3D',\n        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=7,\n        use_dim=[0, 1, 2, 3, 5]),\n    dict(\n        type='LoadAnnotations3D',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        with_bbox=False,\n        with_label=False),\n    dict(\n        type='GlobalRotScaleTransFlipAll',\n        bda_aug_conf=dict(\n            rot_range=(-0.3925, 0.3925),\n            scale_ratio_range=(0.95, 1.05),\n            translation_std=(0.0, 0.0, 0.0),\n            flip_dx_ratio=0.0,\n            flip_dy_ratio=0.5),\n        is_train=False),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car'],\n        with_label=False),\n    dict(\n        type='CustomCollect3D',\n        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=4,\n    train=dict(\n        type='RepeatDataset',\n        times=1,\n        dataset=dict(\n            type='VoDDataset',\n            data_root='data/VoD/radar_5frames/',\n            ann_file='data/VoD/radar_5frames/vod_infos_train.pkl',\n            split='training',\n            pts_prefix='velodyne_reduced',\n            pipeline=[\n                dict(\n                    type='LoadPointsFromFile',\n                    coord_type='LIDAR',\n                    load_dim=7,\n                    use_dim=[0, 1, 2, 3, 5]),\n                dict(\n                    type='LoadAnnotations3D',\n                    with_bbox_3d=True,\n                    with_label_3d=True,\n                    with_bbox=False,\n                    with_label=False),\n                dict(\n                    type='GlobalRotScaleTransFlipAll',\n                    bda_aug_conf=dict(\n                        rot_range=(-0.3925, 0.3925),\n                        scale_ratio_range=(0.95, 1.05),\n                        translation_std=(0.0, 0.0, 0.0),\n                        flip_dx_ratio=0.0,\n                        flip_dy_ratio=0.5),\n                    is_train=True),\n                dict(\n                    type='RandomJitterPoints',\n                    jitter_std=[0.01, 0.01, 0.01],\n                    clip_range=[-0.05, 0.05]),\n                dict(\n                    type='PointsRangeFilter',\n                    point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                dict(\n                    type='ObjectRangeFilter',\n                    point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                dict(type='PointShuffle'),\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=['Pedestrian', 'Cyclist', 'Car']),\n                dict(\n                    type='CustomCollect3D',\n                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n            ],\n            modality=dict(use_lidar=True, use_camera=True),\n            classes=['Pedestrian', 'Cyclist', 'Car'],\n            test_mode=False,\n            box_type_3d='LiDAR')),\n    val=dict(\n        type='VoDDataset',\n        data_root='data/VoD/radar_5frames/',\n        ann_file='data/VoD/radar_5frames/vod_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=7,\n                use_dim=[0, 1, 2, 3, 5]),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_bbox=False,\n                with_label=False),\n            dict(\n                type='GlobalRotScaleTransFlipAll',\n                bda_aug_conf=dict(\n                    rot_range=(-0.3925, 0.3925),\n                    scale_ratio_range=(0.95, 1.05),\n                    translation_std=(0.0, 0.0, 0.0),\n                    flip_dx_ratio=0.0,\n                    flip_dy_ratio=0.5),\n                is_train=False),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=['Pedestrian', 'Cyclist', 'Car'],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ],\n        modality=dict(use_lidar=True, use_camera=True),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=False,\n        box_type_3d='LiDAR'),\n    test=dict(\n        type='VoDDataset',\n        data_root='data/VoD/radar_5frames/',\n        ann_file='data/VoD/radar_5frames/vod_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=7,\n                use_dim=[0, 1, 2, 3, 5]),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True,\n                with_bbox=False,\n                with_label=False),\n            dict(\n                type='GlobalRotScaleTransFlipAll',\n                bda_aug_conf=dict(\n                    rot_range=(-0.3925, 0.3925),\n                    scale_ratio_range=(0.95, 1.05),\n                    translation_std=(0.0, 0.0, 0.0),\n                    flip_dx_ratio=0.0,\n                    flip_dy_ratio=0.5),\n                is_train=False),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=['Pedestrian', 'Cyclist', 'Car'],\n                with_label=False),\n            dict(\n                type='CustomCollect3D',\n                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ],\n        modality=dict(use_lidar=True, use_camera=True),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=False,\n        box_type_3d='LiDAR'))\nevaluation = dict(\n    interval=24,\n    pipeline=[\n        dict(\n            type='LoadPointsFromFile',\n            coord_type='LIDAR',\n            load_dim=7,\n            use_dim=[0, 1, 2, 3, 5]),\n        dict(\n            type='LoadAnnotations3D',\n            with_bbox_3d=True,\n            with_label_3d=True,\n            with_bbox=False,\n            with_label=False),\n        dict(\n            type='GlobalRotScaleTransFlipAll',\n            bda_aug_conf=dict(\n                rot_range=(-0.3925, 0.3925),\n                scale_ratio_range=(0.95, 1.05),\n                translation_std=(0.0, 0.0, 0.0),\n                flip_dx_ratio=0.0,\n                flip_dy_ratio=0.5),\n            is_train=False),\n        dict(\n            type='PointsRangeFilter',\n            point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=['Pedestrian', 'Cyclist', 'Car'],\n            with_label=False),\n        dict(\n            type='CustomCollect3D',\n            keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n    ])\nlr = 3e-05\noptimizer = dict(\n    type='AdamW',\n    lr=3e-05,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(custom_keys=dict(norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))\nlr_config = dict(\n    policy='cyclic',\n    target_ratio=(100, 0.001),\n    cyclic_times=1,\n    step_ratio_up=0.1)\nmomentum_config = None\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\ncheckpoint_config = dict(interval=2)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nload_radar_from = None\nresume_from = None\nworkflow = [('train', 1)]\nwork_dir = './work_dirs/vod-unet_seg_pretrain_4x4_24e'\ngpu_ids = range(0, 4)\n", "seed": 0, "exp_name": "vod-unet_seg_pretrain_4x4_24e.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 6e-05, "memory": 563, "data_time": 0.78994, "loss_sem_seg": 0.01843, "loss_vote": 0.67425, "recall_Pedestrian": 0.99169, "recall_Cyclist": 0.97, "recall_Car": 0.97495, "loss": 0.69268, "grad_norm": 6.74593, "time": 0.99547}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00015, "memory": 563, "data_time": 0.00781, "loss_sem_seg": 0.01615, "loss_vote": 0.5921, "recall_Pedestrian": 0.99239, "recall_Cyclist": 0.98404, "recall_Car": 0.98379, "loss": 0.60825, "grad_norm": 2.89898, "time": 0.20528}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.00029, "memory": 563, "data_time": 0.00772, "loss_sem_seg": 0.01308, "loss_vote": 0.47382, "recall_Pedestrian": 0.97967, "recall_Cyclist": 0.96646, "recall_Car": 0.99184, "loss": 0.4869, "grad_norm": 2.0956, "time": 0.20393}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.00049, "memory": 564, "data_time": 0.00792, "loss_sem_seg": 0.01145, "loss_vote": 0.41298, "recall_Pedestrian": 0.99521, "recall_Cyclist": 0.96959, "recall_Car": 0.98643, "loss": 0.42443, "grad_norm": 1.3554, "time": 0.20193}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.00073, "memory": 564, "data_time": 0.00905, "loss_sem_seg": 0.01104, "loss_vote": 0.36275, "recall_Pedestrian": 0.99706, "recall_Cyclist": 0.98055, "recall_Car": 0.96917, "loss": 0.37379, "grad_norm": 1.22693, "time": 0.20272}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.001, "memory": 564, "data_time": 0.00869, "loss_sem_seg": 0.01086, "loss_vote": 0.34571, "recall_Pedestrian": 0.99066, "recall_Cyclist": 0.97195, "recall_Car": 0.99352, "loss": 0.35657, "grad_norm": 0.98065, "time": 0.20464}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.00142, "memory": 564, "data_time": 0.73795, "loss_sem_seg": 0.01071, "loss_vote": 0.32415, "recall_Pedestrian": 0.99714, "recall_Cyclist": 0.9977, "recall_Car": 0.98879, "loss": 0.33486, "grad_norm": 0.79371, "time": 0.97129}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.00173, "memory": 564, "data_time": 0.00855, "loss_sem_seg": 0.01053, "loss_vote": 0.31407, "recall_Pedestrian": 0.99748, "recall_Cyclist": 0.9821, "recall_Car": 0.97228, "loss": 0.3246, "grad_norm": 0.73722, "time": 0.20056}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00202, "memory": 564, "data_time": 0.00822, "loss_sem_seg": 0.0104, "loss_vote": 0.3042, "recall_Pedestrian": 0.99783, "recall_Cyclist": 0.98189, "recall_Car": 0.98913, "loss": 0.3146, "grad_norm": 0.6073, "time": 0.20374}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00229, "memory": 564, "data_time": 0.00787, "loss_sem_seg": 0.00993, "loss_vote": 0.29123, "recall_Pedestrian": 0.99722, "recall_Cyclist": 0.96062, "recall_Car": 0.98014, "loss": 0.30116, "grad_norm": 0.55358, "time": 0.20545}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.00253, "memory": 564, "data_time": 0.00881, "loss_sem_seg": 0.00987, "loss_vote": 0.28135, "recall_Pedestrian": 0.99785, "recall_Cyclist": 0.9634, "recall_Car": 0.98506, "loss": 0.29122, "grad_norm": 0.52083, "time": 0.20618}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.00273, "memory": 564, "data_time": 0.00922, "loss_sem_seg": 0.00973, "loss_vote": 0.26962, "recall_Pedestrian": 0.9849, "recall_Cyclist": 0.97594, "recall_Car": 0.98294, "loss": 0.27935, "grad_norm": 0.52065, "time": 0.20595}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.00292, "memory": 564, "data_time": 0.77633, "loss_sem_seg": 0.00977, "loss_vote": 0.26044, "recall_Pedestrian": 0.993, "recall_Cyclist": 0.95913, "recall_Car": 0.97105, "loss": 0.27021, "grad_norm": 0.48755, "time": 0.96974}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.00299, "memory": 564, "data_time": 0.00939, "loss_sem_seg": 0.00977, "loss_vote": 0.26041, "recall_Pedestrian": 0.97411, "recall_Cyclist": 0.95651, "recall_Car": 0.96911, "loss": 0.27018, "grad_norm": 0.4303, "time": 0.21351}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.003, "memory": 564, "data_time": 0.00878, "loss_sem_seg": 0.00954, "loss_vote": 0.25753, "recall_Pedestrian": 0.98706, "recall_Cyclist": 0.97222, "recall_Car": 0.9755, "loss": 0.26707, "grad_norm": 0.43307, "time": 0.20705}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.003, "memory": 564, "data_time": 0.00892, "loss_sem_seg": 0.00953, "loss_vote": 0.24803, "recall_Pedestrian": 0.98391, "recall_Cyclist": 0.95479, "recall_Car": 0.97505, "loss": 0.25756, "grad_norm": 0.42255, "time": 0.2237}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.003, "memory": 564, "data_time": 0.00874, "loss_sem_seg": 0.00928, "loss_vote": 0.2432, "recall_Pedestrian": 0.98001, "recall_Cyclist": 0.97088, "recall_Car": 0.96557, "loss": 0.25248, "grad_norm": 0.39572, "time": 0.2233}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.003, "memory": 564, "data_time": 0.0084, "loss_sem_seg": 0.0091, "loss_vote": 0.22893, "recall_Pedestrian": 0.96778, "recall_Cyclist": 0.94218, "recall_Car": 0.97649, "loss": 0.23803, "grad_norm": 0.38086, "time": 0.21792}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.00299, "memory": 564, "data_time": 0.77028, "loss_sem_seg": 0.00897, "loss_vote": 0.23681, "recall_Pedestrian": 0.96109, "recall_Cyclist": 0.95285, "recall_Car": 0.96452, "loss": 0.24577, "grad_norm": 0.39185, "time": 1.06}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.00299, "memory": 564, "data_time": 0.00646, "loss_sem_seg": 0.00886, "loss_vote": 0.22149, "recall_Pedestrian": 0.9699, "recall_Cyclist": 0.94168, "recall_Car": 0.98505, "loss": 0.23035, "grad_norm": 0.41381, "time": 0.20792}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.00298, "memory": 564, "data_time": 0.00822, "loss_sem_seg": 0.0089, "loss_vote": 0.22177, "recall_Pedestrian": 0.96659, "recall_Cyclist": 0.94764, "recall_Car": 0.96585, "loss": 0.23067, "grad_norm": 0.36512, "time": 0.22602}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.00298, "memory": 564, "data_time": 0.00894, "loss_sem_seg": 0.00845, "loss_vote": 0.22761, "recall_Pedestrian": 0.97763, "recall_Cyclist": 0.94406, "recall_Car": 0.95055, "loss": 0.23606, "grad_norm": 0.40591, "time": 0.22043}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.00297, "memory": 564, "data_time": 0.00885, "loss_sem_seg": 0.00853, "loss_vote": 0.22634, "recall_Pedestrian": 0.97568, "recall_Cyclist": 0.95804, "recall_Car": 0.94875, "loss": 0.23487, "grad_norm": 0.39498, "time": 0.22162}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.00296, "memory": 564, "data_time": 0.00819, "loss_sem_seg": 0.00821, "loss_vote": 0.22302, "recall_Pedestrian": 0.97606, "recall_Cyclist": 0.95354, "recall_Car": 0.94265, "loss": 0.23123, "grad_norm": 0.38436, "time": 0.21398}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.00295, "memory": 564, "data_time": 0.81389, "loss_sem_seg": 0.00818, "loss_vote": 0.21672, "recall_Pedestrian": 0.94982, "recall_Cyclist": 0.92675, "recall_Car": 0.93554, "loss": 0.2249, "grad_norm": 0.38093, "time": 1.07225}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.00294, "memory": 564, "data_time": 0.00855, "loss_sem_seg": 0.00807, "loss_vote": 0.21648, "recall_Pedestrian": 0.96922, "recall_Cyclist": 0.96847, "recall_Car": 0.95041, "loss": 0.22455, "grad_norm": 0.36425, "time": 0.2121}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.00293, "memory": 564, "data_time": 0.00875, "loss_sem_seg": 0.00771, "loss_vote": 0.20844, "recall_Pedestrian": 0.96691, "recall_Cyclist": 0.96817, "recall_Car": 0.96208, "loss": 0.21615, "grad_norm": 0.35074, "time": 0.21724}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.00292, "memory": 564, "data_time": 0.00824, "loss_sem_seg": 0.00762, "loss_vote": 0.21204, "recall_Pedestrian": 0.95541, "recall_Cyclist": 0.93787, "recall_Car": 0.9445, "loss": 0.21966, "grad_norm": 0.39455, "time": 0.22829}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.00291, "memory": 564, "data_time": 0.00765, "loss_sem_seg": 0.00775, "loss_vote": 0.20725, "recall_Pedestrian": 0.96062, "recall_Cyclist": 0.9369, "recall_Car": 0.96478, "loss": 0.215, "grad_norm": 0.39682, "time": 0.22999}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0029, "memory": 564, "data_time": 0.00697, "loss_sem_seg": 0.00739, "loss_vote": 0.1994, "recall_Pedestrian": 0.9615, "recall_Cyclist": 0.92877, "recall_Car": 0.93883, "loss": 0.20679, "grad_norm": 0.33826, "time": 0.21651}
{"mode": "train", "epoch": 6, "iter": 50, "lr": 0.00288, "memory": 564, "data_time": 0.75145, "loss_sem_seg": 0.0078, "loss_vote": 0.20724, "recall_Pedestrian": 0.97125, "recall_Cyclist": 0.93569, "recall_Car": 0.95431, "loss": 0.21504, "grad_norm": 0.40749, "time": 1.09697}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.00287, "memory": 564, "data_time": 0.01002, "loss_sem_seg": 0.00737, "loss_vote": 0.20243, "recall_Pedestrian": 0.96223, "recall_Cyclist": 0.94568, "recall_Car": 0.94303, "loss": 0.2098, "grad_norm": 0.34134, "time": 0.22779}
{"mode": "train", "epoch": 6, "iter": 150, "lr": 0.00285, "memory": 564, "data_time": 0.00887, "loss_sem_seg": 0.00717, "loss_vote": 0.19845, "recall_Pedestrian": 0.96714, "recall_Cyclist": 0.95133, "recall_Car": 0.9621, "loss": 0.20563, "grad_norm": 0.34697, "time": 0.22811}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.00284, "memory": 564, "data_time": 0.00776, "loss_sem_seg": 0.00691, "loss_vote": 0.20361, "recall_Pedestrian": 0.96205, "recall_Cyclist": 0.94313, "recall_Car": 0.92704, "loss": 0.21052, "grad_norm": 0.33666, "time": 0.22571}
{"mode": "train", "epoch": 6, "iter": 250, "lr": 0.00282, "memory": 564, "data_time": 0.0083, "loss_sem_seg": 0.00701, "loss_vote": 0.2021, "recall_Pedestrian": 0.95953, "recall_Cyclist": 0.94318, "recall_Car": 0.94407, "loss": 0.20912, "grad_norm": 0.30597, "time": 0.22677}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.00281, "memory": 564, "data_time": 0.0087, "loss_sem_seg": 0.00686, "loss_vote": 0.19032, "recall_Pedestrian": 0.96508, "recall_Cyclist": 0.93903, "recall_Car": 0.9626, "loss": 0.19718, "grad_norm": 0.32545, "time": 0.22711}
{"mode": "train", "epoch": 7, "iter": 50, "lr": 0.00278, "memory": 564, "data_time": 0.7517, "loss_sem_seg": 0.00688, "loss_vote": 0.18942, "recall_Pedestrian": 0.96546, "recall_Cyclist": 0.93946, "recall_Car": 0.9458, "loss": 0.19631, "grad_norm": 0.32085, "time": 1.0596}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.00276, "memory": 564, "data_time": 0.00821, "loss_sem_seg": 0.00656, "loss_vote": 0.19503, "recall_Pedestrian": 0.95615, "recall_Cyclist": 0.95043, "recall_Car": 0.94612, "loss": 0.2016, "grad_norm": 0.33857, "time": 0.20656}
{"mode": "train", "epoch": 7, "iter": 150, "lr": 0.00275, "memory": 564, "data_time": 0.00821, "loss_sem_seg": 0.00673, "loss_vote": 0.19237, "recall_Pedestrian": 0.96739, "recall_Cyclist": 0.93509, "recall_Car": 0.94762, "loss": 0.1991, "grad_norm": 0.32063, "time": 0.20802}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.00273, "memory": 564, "data_time": 0.00739, "loss_sem_seg": 0.00672, "loss_vote": 0.19362, "recall_Pedestrian": 0.96901, "recall_Cyclist": 0.93255, "recall_Car": 0.94389, "loss": 0.20035, "grad_norm": 0.33357, "time": 0.20467}
{"mode": "train", "epoch": 7, "iter": 250, "lr": 0.00271, "memory": 564, "data_time": 0.00671, "loss_sem_seg": 0.00663, "loss_vote": 0.19346, "recall_Pedestrian": 0.96093, "recall_Cyclist": 0.94573, "recall_Car": 0.93834, "loss": 0.20009, "grad_norm": 0.35518, "time": 0.21124}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.00269, "memory": 564, "data_time": 0.0086, "loss_sem_seg": 0.00663, "loss_vote": 0.18997, "recall_Pedestrian": 0.96436, "recall_Cyclist": 0.93453, "recall_Car": 0.94107, "loss": 0.1966, "grad_norm": 0.32499, "time": 0.21606}
{"mode": "train", "epoch": 8, "iter": 50, "lr": 0.00266, "memory": 564, "data_time": 0.77416, "loss_sem_seg": 0.00637, "loss_vote": 0.18358, "recall_Pedestrian": 0.96515, "recall_Cyclist": 0.92732, "recall_Car": 0.96238, "loss": 0.18995, "grad_norm": 0.31948, "time": 1.10862}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.00263, "memory": 565, "data_time": 0.0091, "loss_sem_seg": 0.00647, "loss_vote": 0.18769, "recall_Pedestrian": 0.9572, "recall_Cyclist": 0.92209, "recall_Car": 0.92111, "loss": 0.19416, "grad_norm": 0.34247, "time": 0.21538}
{"mode": "train", "epoch": 8, "iter": 150, "lr": 0.00261, "memory": 565, "data_time": 0.00867, "loss_sem_seg": 0.00636, "loss_vote": 0.18375, "recall_Pedestrian": 0.96551, "recall_Cyclist": 0.95, "recall_Car": 0.95672, "loss": 0.1901, "grad_norm": 0.31926, "time": 0.21763}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.00259, "memory": 565, "data_time": 0.00835, "loss_sem_seg": 0.00616, "loss_vote": 0.1802, "recall_Pedestrian": 0.96341, "recall_Cyclist": 0.93339, "recall_Car": 0.95682, "loss": 0.18636, "grad_norm": 0.33946, "time": 0.22016}
{"mode": "train", "epoch": 8, "iter": 250, "lr": 0.00256, "memory": 565, "data_time": 0.00846, "loss_sem_seg": 0.00617, "loss_vote": 0.18004, "recall_Pedestrian": 0.96052, "recall_Cyclist": 0.94918, "recall_Car": 0.94772, "loss": 0.18621, "grad_norm": 0.30185, "time": 0.22723}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.00254, "memory": 565, "data_time": 0.00828, "loss_sem_seg": 0.00619, "loss_vote": 0.18062, "recall_Pedestrian": 0.96361, "recall_Cyclist": 0.95101, "recall_Car": 0.94171, "loss": 0.18681, "grad_norm": 0.28516, "time": 0.22349}
{"mode": "train", "epoch": 9, "iter": 50, "lr": 0.0025, "memory": 565, "data_time": 0.77029, "loss_sem_seg": 0.00604, "loss_vote": 0.18118, "recall_Pedestrian": 0.94999, "recall_Cyclist": 0.96367, "recall_Car": 0.94892, "loss": 0.18722, "grad_norm": 0.32407, "time": 1.01958}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 0.00248, "memory": 565, "data_time": 0.00907, "loss_sem_seg": 0.00603, "loss_vote": 0.17486, "recall_Pedestrian": 0.96479, "recall_Cyclist": 0.95626, "recall_Car": 0.94675, "loss": 0.18089, "grad_norm": 0.29727, "time": 0.22485}
{"mode": "train", "epoch": 9, "iter": 150, "lr": 0.00245, "memory": 565, "data_time": 0.01023, "loss_sem_seg": 0.00606, "loss_vote": 0.18226, "recall_Pedestrian": 0.95309, "recall_Cyclist": 0.9348, "recall_Car": 0.9545, "loss": 0.18833, "grad_norm": 0.32815, "time": 0.22699}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 0.00243, "memory": 565, "data_time": 0.00912, "loss_sem_seg": 0.00611, "loss_vote": 0.17779, "recall_Pedestrian": 0.96076, "recall_Cyclist": 0.94063, "recall_Car": 0.93435, "loss": 0.1839, "grad_norm": 0.30554, "time": 0.22719}
{"mode": "train", "epoch": 9, "iter": 250, "lr": 0.0024, "memory": 565, "data_time": 0.00682, "loss_sem_seg": 0.00575, "loss_vote": 0.17026, "recall_Pedestrian": 0.96207, "recall_Cyclist": 0.94058, "recall_Car": 0.95747, "loss": 0.17601, "grad_norm": 0.30511, "time": 0.21677}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 0.00237, "memory": 565, "data_time": 0.00878, "loss_sem_seg": 0.00578, "loss_vote": 0.17648, "recall_Pedestrian": 0.95746, "recall_Cyclist": 0.94809, "recall_Car": 0.92591, "loss": 0.18225, "grad_norm": 0.29496, "time": 0.21981}
{"mode": "train", "epoch": 10, "iter": 50, "lr": 0.00233, "memory": 565, "data_time": 0.80731, "loss_sem_seg": 0.0058, "loss_vote": 0.16464, "recall_Pedestrian": 0.96249, "recall_Cyclist": 0.9367, "recall_Car": 0.95206, "loss": 0.17044, "grad_norm": 0.28428, "time": 1.06123}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 0.0023, "memory": 565, "data_time": 0.00936, "loss_sem_seg": 0.00581, "loss_vote": 0.17144, "recall_Pedestrian": 0.95482, "recall_Cyclist": 0.95048, "recall_Car": 0.94865, "loss": 0.17725, "grad_norm": 0.29319, "time": 0.22189}
{"mode": "train", "epoch": 10, "iter": 150, "lr": 0.00228, "memory": 565, "data_time": 0.00869, "loss_sem_seg": 0.0058, "loss_vote": 0.17283, "recall_Pedestrian": 0.95712, "recall_Cyclist": 0.93765, "recall_Car": 0.93498, "loss": 0.17863, "grad_norm": 0.31948, "time": 0.21856}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 0.00225, "memory": 565, "data_time": 0.00714, "loss_sem_seg": 0.00552, "loss_vote": 0.16783, "recall_Pedestrian": 0.96041, "recall_Cyclist": 0.93691, "recall_Car": 0.9346, "loss": 0.17335, "grad_norm": 0.28081, "time": 0.20689}
{"mode": "train", "epoch": 10, "iter": 250, "lr": 0.00222, "memory": 565, "data_time": 0.0077, "loss_sem_seg": 0.00548, "loss_vote": 0.17047, "recall_Pedestrian": 0.95911, "recall_Cyclist": 0.94915, "recall_Car": 0.94145, "loss": 0.17595, "grad_norm": 0.31386, "time": 0.21428}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 0.00219, "memory": 565, "data_time": 0.0085, "loss_sem_seg": 0.00557, "loss_vote": 0.17066, "recall_Pedestrian": 0.94649, "recall_Cyclist": 0.93196, "recall_Car": 0.93888, "loss": 0.17623, "grad_norm": 0.3096, "time": 0.22}
{"mode": "train", "epoch": 11, "iter": 50, "lr": 0.00214, "memory": 565, "data_time": 0.78225, "loss_sem_seg": 0.00546, "loss_vote": 0.16355, "recall_Pedestrian": 0.95912, "recall_Cyclist": 0.97415, "recall_Car": 0.96338, "loss": 0.16901, "grad_norm": 0.31008, "time": 1.08394}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 0.00211, "memory": 565, "data_time": 0.00837, "loss_sem_seg": 0.0055, "loss_vote": 0.17096, "recall_Pedestrian": 0.9584, "recall_Cyclist": 0.92688, "recall_Car": 0.93103, "loss": 0.17645, "grad_norm": 0.30256, "time": 0.2151}
{"mode": "train", "epoch": 11, "iter": 150, "lr": 0.00208, "memory": 565, "data_time": 0.00837, "loss_sem_seg": 0.00536, "loss_vote": 0.16106, "recall_Pedestrian": 0.95161, "recall_Cyclist": 0.94456, "recall_Car": 0.93934, "loss": 0.16642, "grad_norm": 0.28981, "time": 0.21321}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 0.00205, "memory": 565, "data_time": 0.00904, "loss_sem_seg": 0.00533, "loss_vote": 0.15657, "recall_Pedestrian": 0.96118, "recall_Cyclist": 0.92438, "recall_Car": 0.96197, "loss": 0.1619, "grad_norm": 0.30425, "time": 0.21584}
{"mode": "train", "epoch": 11, "iter": 250, "lr": 0.00202, "memory": 565, "data_time": 0.00831, "loss_sem_seg": 0.00533, "loss_vote": 0.16303, "recall_Pedestrian": 0.9497, "recall_Cyclist": 0.94404, "recall_Car": 0.96321, "loss": 0.16837, "grad_norm": 0.28625, "time": 0.21771}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 0.00199, "memory": 565, "data_time": 0.00756, "loss_sem_seg": 0.00531, "loss_vote": 0.16187, "recall_Pedestrian": 0.97009, "recall_Cyclist": 0.92561, "recall_Car": 0.9486, "loss": 0.16718, "grad_norm": 0.29018, "time": 0.20985}
{"mode": "train", "epoch": 12, "iter": 50, "lr": 0.00194, "memory": 565, "data_time": 0.8204, "loss_sem_seg": 0.00508, "loss_vote": 0.15978, "recall_Pedestrian": 0.96055, "recall_Cyclist": 0.9343, "recall_Car": 0.94486, "loss": 0.16486, "grad_norm": 0.28173, "time": 1.04916}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.00191, "memory": 565, "data_time": 0.00849, "loss_sem_seg": 0.00524, "loss_vote": 0.1609, "recall_Pedestrian": 0.9499, "recall_Cyclist": 0.93996, "recall_Car": 0.94366, "loss": 0.16614, "grad_norm": 0.31677, "time": 0.21632}
{"mode": "train", "epoch": 12, "iter": 150, "lr": 0.00187, "memory": 565, "data_time": 0.0085, "loss_sem_seg": 0.00532, "loss_vote": 0.15996, "recall_Pedestrian": 0.96324, "recall_Cyclist": 0.94348, "recall_Car": 0.93857, "loss": 0.16528, "grad_norm": 0.33327, "time": 0.21372}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.00184, "memory": 565, "data_time": 0.00777, "loss_sem_seg": 0.00519, "loss_vote": 0.15615, "recall_Pedestrian": 0.95436, "recall_Cyclist": 0.91939, "recall_Car": 0.94386, "loss": 0.16134, "grad_norm": 0.29742, "time": 0.21055}
{"mode": "train", "epoch": 12, "iter": 250, "lr": 0.00181, "memory": 565, "data_time": 0.00884, "loss_sem_seg": 0.00533, "loss_vote": 0.1594, "recall_Pedestrian": 0.95393, "recall_Cyclist": 0.94581, "recall_Car": 0.94994, "loss": 0.16473, "grad_norm": 0.2921, "time": 0.21975}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.00178, "memory": 565, "data_time": 0.00764, "loss_sem_seg": 0.00516, "loss_vote": 0.1546, "recall_Pedestrian": 0.9571, "recall_Cyclist": 0.95591, "recall_Car": 0.96487, "loss": 0.15976, "grad_norm": 0.2852, "time": 0.21248}
{"mode": "train", "epoch": 13, "iter": 50, "lr": 0.00173, "memory": 565, "data_time": 0.79307, "loss_sem_seg": 0.00494, "loss_vote": 0.15123, "recall_Pedestrian": 0.95603, "recall_Cyclist": 0.93374, "recall_Car": 0.93448, "loss": 0.15617, "grad_norm": 0.29676, "time": 1.04227}
{"mode": "train", "epoch": 13, "iter": 100, "lr": 0.00169, "memory": 565, "data_time": 0.00987, "loss_sem_seg": 0.00502, "loss_vote": 0.15158, "recall_Pedestrian": 0.95853, "recall_Cyclist": 0.9321, "recall_Car": 0.94486, "loss": 0.1566, "grad_norm": 0.2868, "time": 0.22731}
{"mode": "train", "epoch": 13, "iter": 150, "lr": 0.00166, "memory": 565, "data_time": 0.00894, "loss_sem_seg": 0.0051, "loss_vote": 0.1491, "recall_Pedestrian": 0.9559, "recall_Cyclist": 0.94514, "recall_Car": 0.95617, "loss": 0.1542, "grad_norm": 0.29277, "time": 0.22826}
{"mode": "train", "epoch": 13, "iter": 200, "lr": 0.00163, "memory": 565, "data_time": 0.00807, "loss_sem_seg": 0.00508, "loss_vote": 0.15403, "recall_Pedestrian": 0.95149, "recall_Cyclist": 0.9426, "recall_Car": 0.95314, "loss": 0.15911, "grad_norm": 0.284, "time": 0.21621}
{"mode": "train", "epoch": 13, "iter": 250, "lr": 0.00159, "memory": 565, "data_time": 0.00786, "loss_sem_seg": 0.00478, "loss_vote": 0.15073, "recall_Pedestrian": 0.96534, "recall_Cyclist": 0.93562, "recall_Car": 0.92969, "loss": 0.15552, "grad_norm": 0.27461, "time": 0.20929}
{"mode": "train", "epoch": 13, "iter": 300, "lr": 0.00156, "memory": 565, "data_time": 0.00706, "loss_sem_seg": 0.00488, "loss_vote": 0.14698, "recall_Pedestrian": 0.96165, "recall_Cyclist": 0.94429, "recall_Car": 0.94525, "loss": 0.15186, "grad_norm": 0.26859, "time": 0.20756}
{"mode": "train", "epoch": 14, "iter": 50, "lr": 0.00151, "memory": 565, "data_time": 0.775, "loss_sem_seg": 0.00481, "loss_vote": 0.14456, "recall_Pedestrian": 0.95756, "recall_Cyclist": 0.93707, "recall_Car": 0.96649, "loss": 0.14937, "grad_norm": 0.2792, "time": 1.04678}
{"mode": "train", "epoch": 14, "iter": 100, "lr": 0.00148, "memory": 565, "data_time": 0.008, "loss_sem_seg": 0.00467, "loss_vote": 0.14852, "recall_Pedestrian": 0.95254, "recall_Cyclist": 0.93466, "recall_Car": 0.96156, "loss": 0.15319, "grad_norm": 0.29095, "time": 0.22123}
{"mode": "train", "epoch": 14, "iter": 150, "lr": 0.00144, "memory": 565, "data_time": 0.00788, "loss_sem_seg": 0.00474, "loss_vote": 0.14514, "recall_Pedestrian": 0.96351, "recall_Cyclist": 0.96201, "recall_Car": 0.95017, "loss": 0.14988, "grad_norm": 0.28369, "time": 0.21645}
{"mode": "train", "epoch": 14, "iter": 200, "lr": 0.00141, "memory": 565, "data_time": 0.00742, "loss_sem_seg": 0.00473, "loss_vote": 0.1466, "recall_Pedestrian": 0.94869, "recall_Cyclist": 0.95489, "recall_Car": 0.9556, "loss": 0.15133, "grad_norm": 0.27023, "time": 0.2029}
{"mode": "train", "epoch": 14, "iter": 250, "lr": 0.00137, "memory": 565, "data_time": 0.00668, "loss_sem_seg": 0.00493, "loss_vote": 0.14404, "recall_Pedestrian": 0.96225, "recall_Cyclist": 0.93359, "recall_Car": 0.92472, "loss": 0.14897, "grad_norm": 0.27626, "time": 0.2042}
{"mode": "train", "epoch": 14, "iter": 300, "lr": 0.00134, "memory": 565, "data_time": 0.00848, "loss_sem_seg": 0.00475, "loss_vote": 0.14848, "recall_Pedestrian": 0.96266, "recall_Cyclist": 0.9671, "recall_Car": 0.92049, "loss": 0.15323, "grad_norm": 0.29199, "time": 0.213}
{"mode": "train", "epoch": 15, "iter": 50, "lr": 0.00129, "memory": 565, "data_time": 0.78789, "loss_sem_seg": 0.00468, "loss_vote": 0.14192, "recall_Pedestrian": 0.94821, "recall_Cyclist": 0.93913, "recall_Car": 0.94721, "loss": 0.1466, "grad_norm": 0.27841, "time": 1.0274}
{"mode": "train", "epoch": 15, "iter": 100, "lr": 0.00126, "memory": 565, "data_time": 0.00876, "loss_sem_seg": 0.00479, "loss_vote": 0.15072, "recall_Pedestrian": 0.96061, "recall_Cyclist": 0.93911, "recall_Car": 0.9456, "loss": 0.15551, "grad_norm": 0.3079, "time": 0.20832}
{"mode": "train", "epoch": 15, "iter": 150, "lr": 0.00123, "memory": 565, "data_time": 0.00838, "loss_sem_seg": 0.00471, "loss_vote": 0.13811, "recall_Pedestrian": 0.95504, "recall_Cyclist": 0.95022, "recall_Car": 0.96499, "loss": 0.14282, "grad_norm": 0.2602, "time": 0.20876}
{"mode": "train", "epoch": 15, "iter": 200, "lr": 0.00119, "memory": 565, "data_time": 0.00849, "loss_sem_seg": 0.00476, "loss_vote": 0.13948, "recall_Pedestrian": 0.95328, "recall_Cyclist": 0.93633, "recall_Car": 0.95705, "loss": 0.14423, "grad_norm": 0.2603, "time": 0.21498}
{"mode": "train", "epoch": 15, "iter": 250, "lr": 0.00116, "memory": 565, "data_time": 0.00855, "loss_sem_seg": 0.00452, "loss_vote": 0.13901, "recall_Pedestrian": 0.95822, "recall_Cyclist": 0.94506, "recall_Car": 0.95318, "loss": 0.14353, "grad_norm": 0.27256, "time": 0.21705}
{"mode": "train", "epoch": 15, "iter": 300, "lr": 0.00113, "memory": 565, "data_time": 0.00915, "loss_sem_seg": 0.00451, "loss_vote": 0.139, "recall_Pedestrian": 0.9393, "recall_Cyclist": 0.92782, "recall_Car": 0.9576, "loss": 0.1435, "grad_norm": 0.26307, "time": 0.21929}
{"mode": "train", "epoch": 16, "iter": 50, "lr": 0.00108, "memory": 565, "data_time": 0.778, "loss_sem_seg": 0.0045, "loss_vote": 0.13422, "recall_Pedestrian": 0.95919, "recall_Cyclist": 0.9115, "recall_Car": 0.96389, "loss": 0.13872, "grad_norm": 0.28506, "time": 1.02945}
{"mode": "train", "epoch": 16, "iter": 100, "lr": 0.00105, "memory": 565, "data_time": 0.00756, "loss_sem_seg": 0.00457, "loss_vote": 0.13935, "recall_Pedestrian": 0.96425, "recall_Cyclist": 0.96575, "recall_Car": 0.94183, "loss": 0.14392, "grad_norm": 0.28327, "time": 0.21133}
{"mode": "train", "epoch": 16, "iter": 150, "lr": 0.00102, "memory": 565, "data_time": 0.00826, "loss_sem_seg": 0.00433, "loss_vote": 0.13425, "recall_Pedestrian": 0.96378, "recall_Cyclist": 0.96779, "recall_Car": 0.9622, "loss": 0.13858, "grad_norm": 0.2756, "time": 0.21782}
{"mode": "train", "epoch": 16, "iter": 200, "lr": 0.00098, "memory": 565, "data_time": 0.00715, "loss_sem_seg": 0.00439, "loss_vote": 0.1385, "recall_Pedestrian": 0.95701, "recall_Cyclist": 0.9356, "recall_Car": 0.9634, "loss": 0.14289, "grad_norm": 0.27444, "time": 0.20434}
{"mode": "train", "epoch": 16, "iter": 250, "lr": 0.00095, "memory": 565, "data_time": 0.0064, "loss_sem_seg": 0.00448, "loss_vote": 0.1363, "recall_Pedestrian": 0.95105, "recall_Cyclist": 0.94596, "recall_Car": 0.95232, "loss": 0.14078, "grad_norm": 0.28831, "time": 0.20431}
{"mode": "train", "epoch": 16, "iter": 300, "lr": 0.00092, "memory": 565, "data_time": 0.00632, "loss_sem_seg": 0.00445, "loss_vote": 0.13319, "recall_Pedestrian": 0.9615, "recall_Cyclist": 0.95453, "recall_Car": 0.9434, "loss": 0.13764, "grad_norm": 0.26464, "time": 0.20673}
{"mode": "train", "epoch": 17, "iter": 50, "lr": 0.00088, "memory": 565, "data_time": 0.77759, "loss_sem_seg": 0.00435, "loss_vote": 0.13122, "recall_Pedestrian": 0.95706, "recall_Cyclist": 0.95822, "recall_Car": 0.96871, "loss": 0.13557, "grad_norm": 0.25306, "time": 1.0166}
{"mode": "train", "epoch": 17, "iter": 100, "lr": 0.00084, "memory": 565, "data_time": 0.00873, "loss_sem_seg": 0.00415, "loss_vote": 0.12957, "recall_Pedestrian": 0.95197, "recall_Cyclist": 0.95168, "recall_Car": 0.96108, "loss": 0.13372, "grad_norm": 0.26577, "time": 0.20925}
{"mode": "train", "epoch": 17, "iter": 150, "lr": 0.00081, "memory": 565, "data_time": 0.00873, "loss_sem_seg": 0.00414, "loss_vote": 0.13337, "recall_Pedestrian": 0.96064, "recall_Cyclist": 0.93131, "recall_Car": 0.9523, "loss": 0.13751, "grad_norm": 0.26594, "time": 0.21864}
{"mode": "train", "epoch": 17, "iter": 200, "lr": 0.00078, "memory": 565, "data_time": 0.00909, "loss_sem_seg": 0.00438, "loss_vote": 0.12858, "recall_Pedestrian": 0.96158, "recall_Cyclist": 0.95074, "recall_Car": 0.9692, "loss": 0.13297, "grad_norm": 0.27465, "time": 0.21053}
{"mode": "train", "epoch": 17, "iter": 250, "lr": 0.00075, "memory": 565, "data_time": 0.00708, "loss_sem_seg": 0.00423, "loss_vote": 0.13058, "recall_Pedestrian": 0.9599, "recall_Cyclist": 0.94022, "recall_Car": 0.94941, "loss": 0.1348, "grad_norm": 0.27545, "time": 0.19905}
{"mode": "train", "epoch": 17, "iter": 300, "lr": 0.00073, "memory": 565, "data_time": 0.00723, "loss_sem_seg": 0.00412, "loss_vote": 0.12797, "recall_Pedestrian": 0.95235, "recall_Cyclist": 0.97217, "recall_Car": 0.96211, "loss": 0.13209, "grad_norm": 0.27069, "time": 0.20457}
{"mode": "train", "epoch": 18, "iter": 50, "lr": 0.00068, "memory": 565, "data_time": 0.73812, "loss_sem_seg": 0.00405, "loss_vote": 0.12696, "recall_Pedestrian": 0.93637, "recall_Cyclist": 0.9445, "recall_Car": 0.9492, "loss": 0.13101, "grad_norm": 0.26139, "time": 1.00161}
{"mode": "train", "epoch": 18, "iter": 100, "lr": 0.00066, "memory": 565, "data_time": 0.00865, "loss_sem_seg": 0.00414, "loss_vote": 0.12216, "recall_Pedestrian": 0.96093, "recall_Cyclist": 0.94751, "recall_Car": 0.94789, "loss": 0.1263, "grad_norm": 0.25307, "time": 0.21592}
{"mode": "train", "epoch": 18, "iter": 150, "lr": 0.00063, "memory": 565, "data_time": 0.00875, "loss_sem_seg": 0.00417, "loss_vote": 0.12489, "recall_Pedestrian": 0.96718, "recall_Cyclist": 0.95248, "recall_Car": 0.96524, "loss": 0.12905, "grad_norm": 0.24829, "time": 0.22697}
{"mode": "train", "epoch": 18, "iter": 200, "lr": 0.0006, "memory": 565, "data_time": 0.00848, "loss_sem_seg": 0.00413, "loss_vote": 0.12262, "recall_Pedestrian": 0.96483, "recall_Cyclist": 0.91305, "recall_Car": 0.95997, "loss": 0.12675, "grad_norm": 0.24272, "time": 0.21738}
{"mode": "train", "epoch": 18, "iter": 250, "lr": 0.00057, "memory": 565, "data_time": 0.00781, "loss_sem_seg": 0.00404, "loss_vote": 0.12313, "recall_Pedestrian": 0.96659, "recall_Cyclist": 0.92477, "recall_Car": 0.95337, "loss": 0.12717, "grad_norm": 0.26073, "time": 0.20393}
{"mode": "train", "epoch": 18, "iter": 300, "lr": 0.00055, "memory": 565, "data_time": 0.00904, "loss_sem_seg": 0.00407, "loss_vote": 0.12568, "recall_Pedestrian": 0.9512, "recall_Cyclist": 0.94535, "recall_Car": 0.95956, "loss": 0.12975, "grad_norm": 0.24, "time": 0.21418}
{"mode": "train", "epoch": 19, "iter": 50, "lr": 0.00051, "memory": 565, "data_time": 0.80761, "loss_sem_seg": 0.00403, "loss_vote": 0.12132, "recall_Pedestrian": 0.94981, "recall_Cyclist": 0.93676, "recall_Car": 0.96052, "loss": 0.12535, "grad_norm": 0.27005, "time": 1.03273}
{"mode": "train", "epoch": 19, "iter": 100, "lr": 0.00049, "memory": 565, "data_time": 0.00716, "loss_sem_seg": 0.00396, "loss_vote": 0.11895, "recall_Pedestrian": 0.96047, "recall_Cyclist": 0.94431, "recall_Car": 0.97277, "loss": 0.12291, "grad_norm": 0.26554, "time": 0.20312}
{"mode": "train", "epoch": 19, "iter": 150, "lr": 0.00046, "memory": 565, "data_time": 0.00794, "loss_sem_seg": 0.00392, "loss_vote": 0.12091, "recall_Pedestrian": 0.97005, "recall_Cyclist": 0.94375, "recall_Car": 0.93994, "loss": 0.12483, "grad_norm": 0.24877, "time": 0.20705}
{"mode": "train", "epoch": 19, "iter": 200, "lr": 0.00044, "memory": 565, "data_time": 0.00836, "loss_sem_seg": 0.00383, "loss_vote": 0.11948, "recall_Pedestrian": 0.94837, "recall_Cyclist": 0.95132, "recall_Car": 0.96466, "loss": 0.12331, "grad_norm": 0.2613, "time": 0.21732}
{"mode": "train", "epoch": 19, "iter": 250, "lr": 0.00041, "memory": 565, "data_time": 0.00843, "loss_sem_seg": 0.00392, "loss_vote": 0.11915, "recall_Pedestrian": 0.95769, "recall_Cyclist": 0.9439, "recall_Car": 0.93899, "loss": 0.12306, "grad_norm": 0.25197, "time": 0.2138}
{"mode": "train", "epoch": 19, "iter": 300, "lr": 0.00039, "memory": 565, "data_time": 0.00967, "loss_sem_seg": 0.00392, "loss_vote": 0.11623, "recall_Pedestrian": 0.9631, "recall_Cyclist": 0.94396, "recall_Car": 0.97361, "loss": 0.12015, "grad_norm": 0.24312, "time": 0.21916}
{"mode": "train", "epoch": 20, "iter": 50, "lr": 0.00036, "memory": 565, "data_time": 0.77455, "loss_sem_seg": 0.00387, "loss_vote": 0.11705, "recall_Pedestrian": 0.96504, "recall_Cyclist": 0.94584, "recall_Car": 0.96638, "loss": 0.12092, "grad_norm": 0.26752, "time": 1.00964}
{"mode": "train", "epoch": 20, "iter": 100, "lr": 0.00034, "memory": 565, "data_time": 0.00794, "loss_sem_seg": 0.00388, "loss_vote": 0.11433, "recall_Pedestrian": 0.96242, "recall_Cyclist": 0.96248, "recall_Car": 0.96256, "loss": 0.11821, "grad_norm": 0.24377, "time": 0.21348}
{"mode": "train", "epoch": 20, "iter": 150, "lr": 0.00031, "memory": 565, "data_time": 0.00819, "loss_sem_seg": 0.00379, "loss_vote": 0.11539, "recall_Pedestrian": 0.96891, "recall_Cyclist": 0.91867, "recall_Car": 0.94932, "loss": 0.11918, "grad_norm": 0.24178, "time": 0.22135}
{"mode": "train", "epoch": 20, "iter": 200, "lr": 0.00029, "memory": 565, "data_time": 0.00933, "loss_sem_seg": 0.00386, "loss_vote": 0.1154, "recall_Pedestrian": 0.96104, "recall_Cyclist": 0.95149, "recall_Car": 0.96138, "loss": 0.11926, "grad_norm": 0.24435, "time": 0.22213}
{"mode": "train", "epoch": 20, "iter": 250, "lr": 0.00027, "memory": 565, "data_time": 0.00902, "loss_sem_seg": 0.00375, "loss_vote": 0.11448, "recall_Pedestrian": 0.95616, "recall_Cyclist": 0.94809, "recall_Car": 0.97735, "loss": 0.11823, "grad_norm": 0.24583, "time": 0.21733}
{"mode": "train", "epoch": 20, "iter": 300, "lr": 0.00026, "memory": 565, "data_time": 0.00791, "loss_sem_seg": 0.00386, "loss_vote": 0.11388, "recall_Pedestrian": 0.96353, "recall_Cyclist": 0.97164, "recall_Car": 0.95309, "loss": 0.11774, "grad_norm": 0.25041, "time": 0.20816}
{"mode": "train", "epoch": 21, "iter": 50, "lr": 0.00023, "memory": 565, "data_time": 0.80315, "loss_sem_seg": 0.0037, "loss_vote": 0.11398, "recall_Pedestrian": 0.95561, "recall_Cyclist": 0.96992, "recall_Car": 0.95711, "loss": 0.11767, "grad_norm": 0.24932, "time": 1.00274}
{"mode": "train", "epoch": 21, "iter": 100, "lr": 0.00021, "memory": 565, "data_time": 0.00673, "loss_sem_seg": 0.00366, "loss_vote": 0.11138, "recall_Pedestrian": 0.96548, "recall_Cyclist": 0.91907, "recall_Car": 0.96238, "loss": 0.11504, "grad_norm": 0.24596, "time": 0.20384}
{"mode": "train", "epoch": 21, "iter": 150, "lr": 0.00019, "memory": 565, "data_time": 0.00743, "loss_sem_seg": 0.00371, "loss_vote": 0.11115, "recall_Pedestrian": 0.95783, "recall_Cyclist": 0.94266, "recall_Car": 0.97266, "loss": 0.11486, "grad_norm": 0.23849, "time": 0.20247}
{"mode": "train", "epoch": 21, "iter": 200, "lr": 0.00018, "memory": 565, "data_time": 0.0087, "loss_sem_seg": 0.00384, "loss_vote": 0.11494, "recall_Pedestrian": 0.95907, "recall_Cyclist": 0.95544, "recall_Car": 0.95546, "loss": 0.11879, "grad_norm": 0.24346, "time": 0.19915}
{"mode": "train", "epoch": 21, "iter": 250, "lr": 0.00016, "memory": 565, "data_time": 0.00843, "loss_sem_seg": 0.00371, "loss_vote": 0.10918, "recall_Pedestrian": 0.95366, "recall_Cyclist": 0.95684, "recall_Car": 0.96787, "loss": 0.11289, "grad_norm": 0.24054, "time": 0.19408}
{"mode": "train", "epoch": 21, "iter": 300, "lr": 0.00015, "memory": 565, "data_time": 0.00697, "loss_sem_seg": 0.00369, "loss_vote": 0.10894, "recall_Pedestrian": 0.96264, "recall_Cyclist": 0.91265, "recall_Car": 0.96449, "loss": 0.11263, "grad_norm": 0.25173, "time": 0.19659}
{"mode": "train", "epoch": 22, "iter": 50, "lr": 0.00013, "memory": 565, "data_time": 0.74154, "loss_sem_seg": 0.00374, "loss_vote": 0.11185, "recall_Pedestrian": 0.9647, "recall_Cyclist": 0.96649, "recall_Car": 0.96389, "loss": 0.11559, "grad_norm": 0.2475, "time": 1.024}
{"mode": "train", "epoch": 22, "iter": 100, "lr": 0.00011, "memory": 565, "data_time": 0.00727, "loss_sem_seg": 0.00371, "loss_vote": 0.10862, "recall_Pedestrian": 0.95837, "recall_Cyclist": 0.93041, "recall_Car": 0.94494, "loss": 0.11233, "grad_norm": 0.23451, "time": 0.19928}
{"mode": "train", "epoch": 22, "iter": 150, "lr": 0.0001, "memory": 565, "data_time": 0.00664, "loss_sem_seg": 0.00368, "loss_vote": 0.10597, "recall_Pedestrian": 0.96962, "recall_Cyclist": 0.95552, "recall_Car": 0.96808, "loss": 0.10965, "grad_norm": 0.2257, "time": 0.20162}
{"mode": "train", "epoch": 22, "iter": 200, "lr": 9e-05, "memory": 565, "data_time": 0.00796, "loss_sem_seg": 0.00362, "loss_vote": 0.10593, "recall_Pedestrian": 0.97264, "recall_Cyclist": 0.95636, "recall_Car": 0.97218, "loss": 0.10956, "grad_norm": 0.22634, "time": 0.2054}
{"mode": "train", "epoch": 22, "iter": 250, "lr": 8e-05, "memory": 565, "data_time": 0.00711, "loss_sem_seg": 0.00373, "loss_vote": 0.10583, "recall_Pedestrian": 0.96056, "recall_Cyclist": 0.95534, "recall_Car": 0.96321, "loss": 0.10956, "grad_norm": 0.23099, "time": 0.20913}
{"mode": "train", "epoch": 22, "iter": 300, "lr": 7e-05, "memory": 565, "data_time": 0.00852, "loss_sem_seg": 0.00363, "loss_vote": 0.10843, "recall_Pedestrian": 0.9688, "recall_Cyclist": 0.95737, "recall_Car": 0.9536, "loss": 0.11206, "grad_norm": 0.24095, "time": 0.21095}
{"mode": "train", "epoch": 23, "iter": 50, "lr": 5e-05, "memory": 565, "data_time": 0.72578, "loss_sem_seg": 0.00362, "loss_vote": 0.10698, "recall_Pedestrian": 0.95795, "recall_Cyclist": 0.97543, "recall_Car": 0.96079, "loss": 0.1106, "grad_norm": 0.22397, "time": 1.07401}
{"mode": "train", "epoch": 23, "iter": 100, "lr": 5e-05, "memory": 565, "data_time": 0.00922, "loss_sem_seg": 0.00359, "loss_vote": 0.10677, "recall_Pedestrian": 0.96482, "recall_Cyclist": 0.93623, "recall_Car": 0.97565, "loss": 0.11036, "grad_norm": 0.23663, "time": 0.21326}
{"mode": "train", "epoch": 23, "iter": 150, "lr": 4e-05, "memory": 565, "data_time": 0.00895, "loss_sem_seg": 0.00361, "loss_vote": 0.10591, "recall_Pedestrian": 0.96693, "recall_Cyclist": 0.94162, "recall_Car": 0.96097, "loss": 0.10952, "grad_norm": 0.22233, "time": 0.22355}
{"mode": "train", "epoch": 23, "iter": 200, "lr": 3e-05, "memory": 565, "data_time": 0.00764, "loss_sem_seg": 0.00378, "loss_vote": 0.10609, "recall_Pedestrian": 0.96617, "recall_Cyclist": 0.9429, "recall_Car": 0.96884, "loss": 0.10986, "grad_norm": 0.22167, "time": 0.21428}
{"mode": "train", "epoch": 23, "iter": 250, "lr": 2e-05, "memory": 565, "data_time": 0.00846, "loss_sem_seg": 0.00351, "loss_vote": 0.1082, "recall_Pedestrian": 0.96966, "recall_Cyclist": 0.95146, "recall_Car": 0.94703, "loss": 0.11171, "grad_norm": 0.23692, "time": 0.21576}
{"mode": "train", "epoch": 23, "iter": 300, "lr": 2e-05, "memory": 565, "data_time": 0.008, "loss_sem_seg": 0.00362, "loss_vote": 0.10688, "recall_Pedestrian": 0.94952, "recall_Cyclist": 0.95946, "recall_Car": 0.9638, "loss": 0.1105, "grad_norm": 0.22548, "time": 0.21051}
{"mode": "train", "epoch": 24, "iter": 50, "lr": 1e-05, "memory": 565, "data_time": 0.77192, "loss_sem_seg": 0.00362, "loss_vote": 0.10455, "recall_Pedestrian": 0.95865, "recall_Cyclist": 0.95539, "recall_Car": 0.96754, "loss": 0.10817, "grad_norm": 0.23014, "time": 1.08935}
{"mode": "train", "epoch": 24, "iter": 100, "lr": 1e-05, "memory": 565, "data_time": 0.00913, "loss_sem_seg": 0.00352, "loss_vote": 0.10592, "recall_Pedestrian": 0.96271, "recall_Cyclist": 0.95247, "recall_Car": 0.97003, "loss": 0.10945, "grad_norm": 0.23216, "time": 0.21304}
{"mode": "train", "epoch": 24, "iter": 150, "lr": 0.0, "memory": 565, "data_time": 0.00835, "loss_sem_seg": 0.00366, "loss_vote": 0.10578, "recall_Pedestrian": 0.95999, "recall_Cyclist": 0.94848, "recall_Car": 0.96009, "loss": 0.10944, "grad_norm": 0.22562, "time": 0.21617}
{"mode": "train", "epoch": 24, "iter": 200, "lr": 0.0, "memory": 565, "data_time": 0.00871, "loss_sem_seg": 0.00367, "loss_vote": 0.10605, "recall_Pedestrian": 0.95821, "recall_Cyclist": 0.96161, "recall_Car": 0.9709, "loss": 0.10972, "grad_norm": 0.21361, "time": 0.21509}
{"mode": "train", "epoch": 24, "iter": 250, "lr": 0.0, "memory": 565, "data_time": 0.00822, "loss_sem_seg": 0.00378, "loss_vote": 0.10806, "recall_Pedestrian": 0.94625, "recall_Cyclist": 0.95929, "recall_Car": 0.97626, "loss": 0.11183, "grad_norm": 0.2344, "time": 0.21235}
{"mode": "train", "epoch": 24, "iter": 300, "lr": 0.0, "memory": 565, "data_time": 0.00638, "loss_sem_seg": 0.00348, "loss_vote": 0.10532, "recall_Pedestrian": 0.96745, "recall_Cyclist": 0.94793, "recall_Car": 0.9758, "loss": 0.10881, "grad_norm": 0.22792, "time": 0.20661}
