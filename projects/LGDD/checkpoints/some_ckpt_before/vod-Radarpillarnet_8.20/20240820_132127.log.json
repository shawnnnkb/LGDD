{"env_info": "sys.platform: linux\nPython: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1,2,3: NVIDIA GeForce RTX 4090\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.3, V11.3.58\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\nPyTorch: 1.12.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1\nOpenCV: 4.10.0\nMMCV: 1.6.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.24.0\nMMSegmentation: 0.24.0\nMMDetection3D: 0.17.0+", "config": "dataset_type = 'KittiDataset'\ndata_root = 'data/vod/'\nclass_names = ['Pedestrian', 'Cyclist', 'Car']\npoint_cloud_range = [0, -25.6, -3, 51.2, 25.6, 2]\ninput_modality = dict(use_lidar=True, use_camera=False)\nfile_client_args = dict(backend='disk')\nvoxel_size = [0.16, 0.16, 5]\nmodel = dict(\n    type='VoxelNet',\n    voxel_layer=dict(\n        max_num_points=10,\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2],\n        voxel_size=[0.16, 0.16, 5],\n        max_voxels=(16000, 40000)),\n    voxel_encoder=dict(\n        type='RadarPillarFeatureNet',\n        in_channels=5,\n        feat_channels=[64],\n        with_distance=False,\n        voxel_size=[0.16, 0.16, 5],\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2],\n        legacy=False,\n        with_velocity_snr_center=True),\n    middle_encoder=dict(\n        type='PointPillarsScatter', in_channels=64, output_shape=[320, 320]),\n    backbone=dict(\n        type='SECOND',\n        in_channels=64,\n        layer_nums=[3, 5, 5],\n        layer_strides=[2, 2, 2],\n        out_channels=[64, 128, 256]),\n    neck=dict(\n        type='SECONDFPN',\n        in_channels=[64, 128, 256],\n        upsample_strides=[1, 2, 4],\n        out_channels=[128, 128, 128]),\n    bbox_head=dict(\n        type='Anchor3DHead',\n        num_classes=3,\n        in_channels=384,\n        feat_channels=384,\n        use_direction_classifier=True,\n        anchor_generator=dict(\n            type='Anchor3DRangeGenerator',\n            ranges=[[0, -25.6, -0.6, 51.2, 25.6, -0.6],\n                    [0, -25.6, -0.6, 51.2, 25.6, -0.6],\n                    [0, -25.6, -1.78, 51.2, 25.6, -1.78]],\n            sizes=[[0.6, 0.8, 1.73], [0.6, 1.76, 1.73], [1.6, 3.9, 1.56]],\n            rotations=[0, 1.57],\n            reshape_out=False),\n        diff_rad_by_sin=True,\n        bbox_coder=dict(type='DeltaXYZWLHRBBoxCoder'),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=1.0),\n        loss_bbox=dict(\n            type='SmoothL1Loss', beta=0.1111111111111111, loss_weight=2.0),\n        loss_dir=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=0.2)),\n    train_cfg=dict(\n        assigner=[\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.35,\n                min_pos_iou=0.35,\n                ignore_iof_thr=-1),\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.35,\n                min_pos_iou=0.35,\n                ignore_iof_thr=-1),\n            dict(\n                type='MaxIoUAssigner',\n                iou_calculator=dict(type='BboxOverlapsNearest3D'),\n                pos_iou_thr=0.6,\n                neg_iou_thr=0.45,\n                min_pos_iou=0.45,\n                ignore_iof_thr=-1)\n        ],\n        allowed_border=0,\n        pos_weight=-1,\n        debug=False),\n    test_cfg=dict(\n        use_rotate_nms=True,\n        nms_across_levels=False,\n        nms_thr=0.01,\n        score_thr=0.1,\n        min_bbox_size=0,\n        nms_pre=100,\n        max_num=50))\ntrain_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=7,\n        use_dim=[0, 1, 2, 3, 5],\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadAnnotations3D',\n        with_bbox_3d=True,\n        with_label_3d=True,\n        file_client_args=dict(backend='disk')),\n    dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n    dict(\n        type='GlobalRotScaleTrans',\n        rot_range=[0, 0],\n        scale_ratio_range=[0.95, 1.05]),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car']),\n    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=7,\n        use_dim=[0, 1, 2, 3, 5],\n        file_client_args=dict(backend='disk')),\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1936, 1216),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[0, 0],\n                scale_ratio_range=[1.0, 1.0],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D'),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=['Pedestrian', 'Cyclist', 'Car'],\n                with_label=False),\n            dict(type='Collect3D', keys=['points'])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=['Pedestrian', 'Cyclist', 'Car'],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=4,\n    train=dict(\n        type='RepeatDataset',\n        times=1,\n        dataset=dict(\n            type='KittiDataset',\n            data_root='data/vod/',\n            ann_file='data/vod/vod_infos_train.pkl',\n            split='training',\n            pts_prefix='velodyne_reduced',\n            pipeline=[\n                dict(\n                    type='LoadPointsFromFile',\n                    coord_type='LIDAR',\n                    load_dim=7,\n                    use_dim=[0, 1, 2, 3, 5],\n                    file_client_args=dict(backend='disk')),\n                dict(\n                    type='LoadAnnotations3D',\n                    with_bbox_3d=True,\n                    with_label_3d=True,\n                    file_client_args=dict(backend='disk')),\n                dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n                dict(\n                    type='GlobalRotScaleTrans',\n                    rot_range=[0, 0],\n                    scale_ratio_range=[0.95, 1.05]),\n                dict(\n                    type='PointsRangeFilter',\n                    point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                dict(\n                    type='ObjectRangeFilter',\n                    point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                dict(type='PointShuffle'),\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=['Pedestrian', 'Cyclist', 'Car']),\n                dict(\n                    type='Collect3D',\n                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n            ],\n            modality=dict(use_lidar=True, use_camera=False),\n            classes=['Pedestrian', 'Cyclist', 'Car'],\n            test_mode=False,\n            box_type_3d='LiDAR')),\n    val=dict(\n        type='KittiDataset',\n        data_root='data/vod/',\n        ann_file='data/vod/vod_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=7,\n                use_dim=[0, 1, 2, 3, 5],\n                file_client_args=dict(backend='disk')),\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1936, 1216),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=['Pedestrian', 'Cyclist', 'Car'],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        modality=dict(use_lidar=True, use_camera=False),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=True,\n        box_type_3d='LiDAR'),\n    test=dict(\n        type='KittiDataset',\n        data_root='data/vod/',\n        ann_file='data/vod/vod_infos_val.pkl',\n        split='training',\n        pts_prefix='velodyne_reduced',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=7,\n                use_dim=[0, 1, 2, 3, 5],\n                file_client_args=dict(backend='disk')),\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1936, 1216),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[0, -25.6, -3, 51.2, 25.6, 2]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=['Pedestrian', 'Cyclist', 'Car'],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        modality=dict(use_lidar=True, use_camera=False),\n        classes=['Pedestrian', 'Cyclist', 'Car'],\n        test_mode=True,\n        box_type_3d='LiDAR'))\nevaluation = dict(\n    interval=1,\n    pipeline=[\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=['Pedestrian', 'Cyclist', 'Car'],\n            with_label=False),\n        dict(type='Collect3D', keys=['points'])\n    ])\nlr = 0.003\noptimizer = dict(type='AdamW', lr=0.003, betas=(0.95, 0.99), weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=10, norm_type=2))\nlr_config = dict(\n    policy='step',\n    warmup=None,\n    warmup_iters=1000,\n    warmup_ratio=0.001,\n    step=[16, 20])\nmomentum_config = dict(\n    policy='cyclic',\n    target_ratio=(0.8947368421052632, 1),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nrunner = dict(type='EpochBasedRunner', max_epochs=24)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/vod-Radarpillarnet_8.20'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ngpu_ids = range(0, 4)\n", "seed": 0, "exp_name": "vod-radarpillarnet.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.003, "memory": 1658, "data_time": 0.9849, "loss_cls": 0.56585, "loss_bbox": 0.96373, "loss_dir": 0.0759, "loss": 1.60548, "grad_norm": 3.69299, "time": 1.21305}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.003, "memory": 1660, "data_time": 0.00867, "loss_cls": 0.45129, "loss_bbox": 0.72649, "loss_dir": 0.06813, "loss": 1.24591, "grad_norm": 1.37538, "time": 0.1663}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 0.003, "memory": 1660, "data_time": 0.00854, "loss_cls": 0.42672, "loss_bbox": 0.68342, "loss_dir": 0.06593, "loss": 1.17606, "grad_norm": 1.31774, "time": 0.16572}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 0.003, "memory": 1660, "data_time": 0.00889, "loss_cls": 0.41667, "loss_bbox": 0.7031, "loss_dir": 0.05994, "loss": 1.17971, "grad_norm": 1.31568, "time": 0.16477}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 0.003, "memory": 1660, "data_time": 0.00914, "loss_cls": 0.40813, "loss_bbox": 0.68154, "loss_dir": 0.05766, "loss": 1.14732, "grad_norm": 1.18349, "time": 0.16558}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 0.003, "memory": 1660, "data_time": 0.00836, "loss_cls": 0.39139, "loss_bbox": 0.65314, "loss_dir": 0.05439, "loss": 1.09892, "grad_norm": 1.15914, "time": 0.16463}
{"mode": "val", "epoch": 1, "iter": 324, "lr": 0.003, "KITTI/Pedestrian_3D_easy_strict": 2.36635, "KITTI/Pedestrian_BEV_easy_strict": 6.66801, "KITTI/Pedestrian_2D_easy_strict": 11.46532, "KITTI/Pedestrian_3D_moderate_strict": 5.1286, "KITTI/Pedestrian_BEV_moderate_strict": 8.74408, "KITTI/Pedestrian_2D_moderate_strict": 13.03075, "KITTI/Pedestrian_3D_hard_strict": 5.1286, "KITTI/Pedestrian_BEV_hard_strict": 8.67792, "KITTI/Pedestrian_2D_hard_strict": 13.07975, "KITTI/Pedestrian_3D_easy_loose": 14.38464, "KITTI/Pedestrian_BEV_easy_loose": 23.65225, "KITTI/Pedestrian_2D_easy_loose": 24.66715, "KITTI/Pedestrian_3D_moderate_loose": 17.70456, "KITTI/Pedestrian_BEV_moderate_loose": 28.3036, "KITTI/Pedestrian_2D_moderate_loose": 31.26682, "KITTI/Pedestrian_3D_hard_loose": 17.66796, "KITTI/Pedestrian_BEV_hard_loose": 28.37883, "KITTI/Pedestrian_2D_hard_loose": 31.29753, "KITTI/Cyclist_3D_easy_strict": 5.50834, "KITTI/Cyclist_BEV_easy_strict": 10.42304, "KITTI/Cyclist_2D_easy_strict": 19.45349, "KITTI/Cyclist_3D_moderate_strict": 3.8678, "KITTI/Cyclist_BEV_moderate_strict": 8.24274, "KITTI/Cyclist_2D_moderate_strict": 14.57868, "KITTI/Cyclist_3D_hard_strict": 3.8853, "KITTI/Cyclist_BEV_hard_strict": 8.1971, "KITTI/Cyclist_2D_hard_strict": 14.51941, "KITTI/Cyclist_3D_easy_loose": 24.93476, "KITTI/Cyclist_BEV_easy_loose": 27.15328, "KITTI/Cyclist_2D_easy_loose": 28.41245, "KITTI/Cyclist_3D_moderate_loose": 20.04361, "KITTI/Cyclist_BEV_moderate_loose": 25.18093, "KITTI/Cyclist_2D_moderate_loose": 27.34229, "KITTI/Cyclist_3D_hard_loose": 19.9412, "KITTI/Cyclist_BEV_hard_loose": 25.204, "KITTI/Cyclist_2D_hard_loose": 27.57676, "KITTI/Car_3D_easy_strict": 8.8568, "KITTI/Car_BEV_easy_strict": 20.52534, "KITTI/Car_2D_easy_strict": 17.3989, "KITTI/Car_3D_moderate_strict": 6.03242, "KITTI/Car_BEV_moderate_strict": 15.02753, "KITTI/Car_2D_moderate_strict": 12.32931, "KITTI/Car_3D_hard_strict": 5.99959, "KITTI/Car_BEV_hard_strict": 14.94171, "KITTI/Car_2D_hard_strict": 12.17286, "KITTI/Car_3D_easy_loose": 20.04752, "KITTI/Car_BEV_easy_loose": 24.03441, "KITTI/Car_2D_easy_loose": 24.97017, "KITTI/Car_3D_moderate_loose": 13.60791, "KITTI/Car_BEV_moderate_loose": 18.80025, "KITTI/Car_2D_moderate_loose": 20.31621, "KITTI/Car_3D_hard_loose": 13.46144, "KITTI/Car_BEV_hard_loose": 18.74087, "KITTI/Car_2D_hard_loose": 20.34053, "KITTI/Overall_3D_easy": 16.05873, "KITTI/Overall_BEV_easy": 23.77696, "KITTI/Overall_2D_easy": 23.49283, "KITTI/Overall_3D_moderate": 14.59353, "KITTI/Overall_BEV_moderate": 22.83735, "KITTI/Overall_2D_moderate": 23.64614, "KITTI/Overall_3D_hard": 14.53625, "KITTI/Overall_BEV_hard": 22.84152, "KITTI/Overall_2D_hard": 23.68238}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 0.003, "memory": 1660, "data_time": 0.97123, "loss_cls": 0.38162, "loss_bbox": 0.66813, "loss_dir": 0.05258, "loss": 1.10233, "grad_norm": 1.14463, "time": 1.11669}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.003, "memory": 1660, "data_time": 0.00879, "loss_cls": 0.36229, "loss_bbox": 0.66667, "loss_dir": 0.04833, "loss": 1.07729, "grad_norm": 1.20315, "time": 0.16487}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.003, "memory": 1660, "data_time": 0.0088, "loss_cls": 0.34014, "loss_bbox": 0.63135, "loss_dir": 0.04456, "loss": 1.01606, "grad_norm": 1.09239, "time": 0.16734}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.003, "memory": 1660, "data_time": 0.00956, "loss_cls": 0.34578, "loss_bbox": 0.62626, "loss_dir": 0.04357, "loss": 1.01561, "grad_norm": 1.16838, "time": 0.16694}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 0.003, "memory": 1660, "data_time": 0.00917, "loss_cls": 0.3302, "loss_bbox": 0.614, "loss_dir": 0.04247, "loss": 0.98667, "grad_norm": 1.1432, "time": 0.16763}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.003, "memory": 1660, "data_time": 0.00956, "loss_cls": 0.32667, "loss_bbox": 0.60242, "loss_dir": 0.04174, "loss": 0.97083, "grad_norm": 1.07027, "time": 0.16563}
{"mode": "val", "epoch": 2, "iter": 324, "lr": 0.003, "KITTI/Pedestrian_3D_easy_strict": 3.74565, "KITTI/Pedestrian_BEV_easy_strict": 8.58672, "KITTI/Pedestrian_2D_easy_strict": 13.73072, "KITTI/Pedestrian_3D_moderate_strict": 3.18206, "KITTI/Pedestrian_BEV_moderate_strict": 9.25608, "KITTI/Pedestrian_2D_moderate_strict": 14.03259, "KITTI/Pedestrian_3D_hard_strict": 3.07266, "KITTI/Pedestrian_BEV_hard_strict": 9.27047, "KITTI/Pedestrian_2D_hard_strict": 14.07786, "KITTI/Pedestrian_3D_easy_loose": 20.21527, "KITTI/Pedestrian_BEV_easy_loose": 33.04923, "KITTI/Pedestrian_2D_easy_loose": 32.26279, "KITTI/Pedestrian_3D_moderate_loose": 23.62957, "KITTI/Pedestrian_BEV_moderate_loose": 36.16008, "KITTI/Pedestrian_2D_moderate_loose": 36.6208, "KITTI/Pedestrian_3D_hard_loose": 23.5868, "KITTI/Pedestrian_BEV_hard_loose": 36.11136, "KITTI/Pedestrian_2D_hard_loose": 36.6458, "KITTI/Cyclist_3D_easy_strict": 6.62868, "KITTI/Cyclist_BEV_easy_strict": 18.53795, "KITTI/Cyclist_2D_easy_strict": 29.92722, "KITTI/Cyclist_3D_moderate_strict": 4.52028, "KITTI/Cyclist_BEV_moderate_strict": 16.0258, "KITTI/Cyclist_2D_moderate_strict": 24.29056, "KITTI/Cyclist_3D_hard_strict": 4.4905, "KITTI/Cyclist_BEV_hard_strict": 16.07928, "KITTI/Cyclist_2D_hard_strict": 24.15983, "KITTI/Cyclist_3D_easy_loose": 38.23285, "KITTI/Cyclist_BEV_easy_loose": 44.4994, "KITTI/Cyclist_2D_easy_loose": 48.24968, "KITTI/Cyclist_3D_moderate_loose": 33.34692, "KITTI/Cyclist_BEV_moderate_loose": 43.24419, "KITTI/Cyclist_2D_moderate_loose": 46.74547, "KITTI/Cyclist_3D_hard_loose": 33.44514, "KITTI/Cyclist_BEV_hard_loose": 43.34556, "KITTI/Cyclist_2D_hard_loose": 46.922, "KITTI/Car_3D_easy_strict": 22.07639, "KITTI/Car_BEV_easy_strict": 37.70825, "KITTI/Car_2D_easy_strict": 32.51802, "KITTI/Car_3D_moderate_strict": 15.369, "KITTI/Car_BEV_moderate_strict": 30.75918, "KITTI/Car_2D_moderate_strict": 23.6739, "KITTI/Car_3D_hard_strict": 15.20662, "KITTI/Car_BEV_hard_strict": 30.63391, "KITTI/Car_2D_hard_strict": 23.53964, "KITTI/Car_3D_easy_loose": 35.73371, "KITTI/Car_BEV_easy_loose": 42.41504, "KITTI/Car_2D_easy_loose": 37.97311, "KITTI/Car_3D_moderate_loose": 27.36705, "KITTI/Car_BEV_moderate_loose": 34.13957, "KITTI/Car_2D_moderate_loose": 32.08671, "KITTI/Car_3D_hard_loose": 27.06472, "KITTI/Car_BEV_hard_loose": 33.97014, "KITTI/Car_2D_hard_loose": 32.12314, "KITTI/Overall_3D_easy": 26.8415, "KITTI/Overall_BEV_easy": 38.41896, "KITTI/Overall_2D_easy": 37.67683, "KITTI/Overall_3D_moderate": 24.11517, "KITTI/Overall_BEV_moderate": 36.72115, "KITTI/Overall_2D_moderate": 35.68005, "KITTI/Overall_3D_hard": 24.07952, "KITTI/Overall_BEV_hard": 36.69694, "KITTI/Overall_2D_hard": 35.70248}
{"mode": "train", "epoch": 3, "iter": 50, "lr": 0.003, "memory": 1660, "data_time": 0.98436, "loss_cls": 0.31495, "loss_bbox": 0.61005, "loss_dir": 0.04163, "loss": 0.96663, "grad_norm": 1.07333, "time": 1.1347}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.003, "memory": 1660, "data_time": 0.00718, "loss_cls": 0.3134, "loss_bbox": 0.59853, "loss_dir": 0.03921, "loss": 0.95114, "grad_norm": 1.20587, "time": 0.15519}
{"mode": "train", "epoch": 3, "iter": 150, "lr": 0.003, "memory": 1660, "data_time": 0.00786, "loss_cls": 0.29637, "loss_bbox": 0.60603, "loss_dir": 0.03869, "loss": 0.94108, "grad_norm": 1.06032, "time": 0.16408}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.003, "memory": 1660, "data_time": 0.00883, "loss_cls": 0.30481, "loss_bbox": 0.58082, "loss_dir": 0.03684, "loss": 0.92248, "grad_norm": 1.10795, "time": 0.16403}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.003, "memory": 1660, "data_time": 0.00704, "loss_cls": 0.30757, "loss_bbox": 0.59073, "loss_dir": 0.03985, "loss": 0.93816, "grad_norm": 1.17826, "time": 0.15627}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.003, "memory": 1660, "data_time": 0.00677, "loss_cls": 0.29282, "loss_bbox": 0.54596, "loss_dir": 0.03563, "loss": 0.87441, "grad_norm": 1.17688, "time": 0.15391}
{"mode": "val", "epoch": 3, "iter": 324, "lr": 0.003, "KITTI/Pedestrian_3D_easy_strict": 10.42077, "KITTI/Pedestrian_BEV_easy_strict": 16.50873, "KITTI/Pedestrian_2D_easy_strict": 19.85415, "KITTI/Pedestrian_3D_moderate_strict": 10.33776, "KITTI/Pedestrian_BEV_moderate_strict": 17.41423, "KITTI/Pedestrian_2D_moderate_strict": 21.11177, "KITTI/Pedestrian_3D_hard_strict": 10.2326, "KITTI/Pedestrian_BEV_hard_strict": 17.38918, "KITTI/Pedestrian_2D_hard_strict": 21.09102, "KITTI/Pedestrian_3D_easy_loose": 28.36886, "KITTI/Pedestrian_BEV_easy_loose": 38.08464, "KITTI/Pedestrian_2D_easy_loose": 38.77482, "KITTI/Pedestrian_3D_moderate_loose": 27.69676, "KITTI/Pedestrian_BEV_moderate_loose": 37.89527, "KITTI/Pedestrian_2D_moderate_loose": 42.34114, "KITTI/Pedestrian_3D_hard_loose": 27.72987, "KITTI/Pedestrian_BEV_hard_loose": 37.963, "KITTI/Pedestrian_2D_hard_loose": 42.43125, "KITTI/Cyclist_3D_easy_strict": 4.35956, "KITTI/Cyclist_BEV_easy_strict": 10.18915, "KITTI/Cyclist_2D_easy_strict": 21.95178, "KITTI/Cyclist_3D_moderate_strict": 4.46784, "KITTI/Cyclist_BEV_moderate_strict": 8.45213, "KITTI/Cyclist_2D_moderate_strict": 20.54212, "KITTI/Cyclist_3D_hard_strict": 4.40596, "KITTI/Cyclist_BEV_hard_strict": 8.51318, "KITTI/Cyclist_2D_hard_strict": 20.51169, "KITTI/Cyclist_3D_easy_loose": 41.53985, "KITTI/Cyclist_BEV_easy_loose": 52.89998, "KITTI/Cyclist_2D_easy_loose": 55.12557, "KITTI/Cyclist_3D_moderate_loose": 41.34048, "KITTI/Cyclist_BEV_moderate_loose": 50.14371, "KITTI/Cyclist_2D_moderate_loose": 53.16959, "KITTI/Cyclist_3D_hard_loose": 41.26197, "KITTI/Cyclist_BEV_hard_loose": 50.11038, "KITTI/Cyclist_2D_hard_loose": 53.19005, "KITTI/Car_3D_easy_strict": 32.36167, "KITTI/Car_BEV_easy_strict": 43.13379, "KITTI/Car_2D_easy_strict": 39.28484, "KITTI/Car_3D_moderate_strict": 23.58983, "KITTI/Car_BEV_moderate_strict": 37.74016, "KITTI/Car_2D_moderate_strict": 31.50336, "KITTI/Car_3D_hard_strict": 23.49625, "KITTI/Car_BEV_hard_strict": 37.49532, "KITTI/Car_2D_hard_strict": 31.46072, "KITTI/Car_3D_easy_loose": 42.15866, "KITTI/Car_BEV_easy_loose": 47.47501, "KITTI/Car_2D_easy_loose": 43.53589, "KITTI/Car_3D_moderate_loose": 35.14133, "KITTI/Car_BEV_moderate_loose": 43.63243, "KITTI/Car_2D_moderate_loose": 42.77078, "KITTI/Car_3D_hard_loose": 34.93351, "KITTI/Car_BEV_hard_loose": 43.47788, "KITTI/Car_2D_hard_loose": 42.82651, "KITTI/Overall_3D_easy": 34.09012, "KITTI/Overall_BEV_easy": 44.70613, "KITTI/Overall_2D_easy": 44.39508, "KITTI/Overall_3D_moderate": 30.87569, "KITTI/Overall_BEV_moderate": 41.92638, "KITTI/Overall_2D_moderate": 42.33803, "KITTI/Overall_3D_hard": 30.82936, "KITTI/Overall_BEV_hard": 41.85623, "KITTI/Overall_2D_hard": 42.36067}
{"mode": "train", "epoch": 4, "iter": 50, "lr": 0.003, "memory": 1661, "data_time": 0.98242, "loss_cls": 0.29381, "loss_bbox": 0.57608, "loss_dir": 0.03902, "loss": 0.90891, "grad_norm": 1.07199, "time": 1.12617}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.003, "memory": 1661, "data_time": 0.0088, "loss_cls": 0.28745, "loss_bbox": 0.53199, "loss_dir": 0.03673, "loss": 0.85616, "grad_norm": 1.13124, "time": 0.165}
{"mode": "train", "epoch": 4, "iter": 150, "lr": 0.003, "memory": 1661, "data_time": 0.00916, "loss_cls": 0.282, "loss_bbox": 0.56008, "loss_dir": 0.03548, "loss": 0.87755, "grad_norm": 1.14115, "time": 0.1663}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.003, "memory": 1661, "data_time": 0.00882, "loss_cls": 0.28706, "loss_bbox": 0.54699, "loss_dir": 0.0361, "loss": 0.87014, "grad_norm": 1.20326, "time": 0.16445}
{"mode": "train", "epoch": 4, "iter": 250, "lr": 0.003, "memory": 1661, "data_time": 0.00972, "loss_cls": 0.27264, "loss_bbox": 0.51714, "loss_dir": 0.03317, "loss": 0.82296, "grad_norm": 1.15638, "time": 0.16815}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.003, "memory": 1661, "data_time": 0.009, "loss_cls": 0.27114, "loss_bbox": 0.52531, "loss_dir": 0.03196, "loss": 0.82841, "grad_norm": 1.15516, "time": 0.16555}
{"mode": "val", "epoch": 4, "iter": 324, "lr": 0.003, "KITTI/Pedestrian_3D_easy_strict": 11.45096, "KITTI/Pedestrian_BEV_easy_strict": 19.11479, "KITTI/Pedestrian_2D_easy_strict": 25.01513, "KITTI/Pedestrian_3D_moderate_strict": 11.12267, "KITTI/Pedestrian_BEV_moderate_strict": 19.36676, "KITTI/Pedestrian_2D_moderate_strict": 25.1157, "KITTI/Pedestrian_3D_hard_strict": 11.10812, "KITTI/Pedestrian_BEV_hard_strict": 19.34935, "KITTI/Pedestrian_2D_hard_strict": 24.87436, "KITTI/Pedestrian_3D_easy_loose": 29.53382, "KITTI/Pedestrian_BEV_easy_loose": 37.42773, "KITTI/Pedestrian_2D_easy_loose": 39.67992, "KITTI/Pedestrian_3D_moderate_loose": 30.5487, "KITTI/Pedestrian_BEV_moderate_loose": 39.34295, "KITTI/Pedestrian_2D_moderate_loose": 45.90919, "KITTI/Pedestrian_3D_hard_loose": 30.51707, "KITTI/Pedestrian_BEV_hard_loose": 39.34455, "KITTI/Pedestrian_2D_hard_loose": 45.95269, "KITTI/Cyclist_3D_easy_strict": 9.20403, "KITTI/Cyclist_BEV_easy_strict": 21.28753, "KITTI/Cyclist_2D_easy_strict": 38.64624, "KITTI/Cyclist_3D_moderate_strict": 8.28496, "KITTI/Cyclist_BEV_moderate_strict": 21.39921, "KITTI/Cyclist_2D_moderate_strict": 38.1427, "KITTI/Cyclist_3D_hard_strict": 8.22652, "KITTI/Cyclist_BEV_hard_strict": 21.39784, "KITTI/Cyclist_2D_hard_strict": 35.57552, "KITTI/Cyclist_3D_easy_loose": 47.43305, "KITTI/Cyclist_BEV_easy_loose": 52.60434, "KITTI/Cyclist_2D_easy_loose": 56.72475, "KITTI/Cyclist_3D_moderate_loose": 45.28548, "KITTI/Cyclist_BEV_moderate_loose": 53.21121, "KITTI/Cyclist_2D_moderate_loose": 55.33712, "KITTI/Cyclist_3D_hard_loose": 45.22186, "KITTI/Cyclist_BEV_hard_loose": 53.32235, "KITTI/Cyclist_2D_hard_loose": 55.41403, "KITTI/Car_3D_easy_strict": 39.24641, "KITTI/Car_BEV_easy_strict": 49.11598, "KITTI/Car_2D_easy_strict": 45.74624, "KITTI/Car_3D_moderate_strict": 30.16948, "KITTI/Car_BEV_moderate_strict": 43.65071, "KITTI/Car_2D_moderate_strict": 36.09768, "KITTI/Car_3D_hard_strict": 29.85691, "KITTI/Car_BEV_hard_strict": 41.01948, "KITTI/Car_2D_hard_strict": 35.96534, "KITTI/Car_3D_easy_loose": 48.79439, "KITTI/Car_BEV_easy_loose": 54.86787, "KITTI/Car_2D_easy_loose": 46.57865, "KITTI/Car_3D_moderate_loose": 40.09408, "KITTI/Car_BEV_moderate_loose": 47.72283, "KITTI/Car_2D_moderate_loose": 44.52179, "KITTI/Car_3D_hard_loose": 39.8614, "KITTI/Car_BEV_hard_loose": 47.34132, "KITTI/Car_2D_hard_loose": 44.58722, "KITTI/Overall_3D_easy": 38.73776, "KITTI/Overall_BEV_easy": 46.38268, "KITTI/Overall_2D_easy": 47.38364, "KITTI/Overall_3D_moderate": 35.33456, "KITTI/Overall_BEV_moderate": 45.40162, "KITTI/Overall_2D_moderate": 45.78133, "KITTI/Overall_3D_hard": 35.19862, "KITTI/Overall_BEV_hard": 44.56212, "KITTI/Overall_2D_hard": 45.77735}
{"mode": "train", "epoch": 5, "iter": 50, "lr": 0.003, "memory": 1661, "data_time": 0.98749, "loss_cls": 0.2795, "loss_bbox": 0.51599, "loss_dir": 0.03452, "loss": 0.83001, "grad_norm": 1.16265, "time": 1.13483}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.003, "memory": 1661, "data_time": 0.00645, "loss_cls": 0.27103, "loss_bbox": 0.51329, "loss_dir": 0.03301, "loss": 0.81733, "grad_norm": 1.09875, "time": 0.15404}
{"mode": "train", "epoch": 5, "iter": 150, "lr": 0.003, "memory": 1661, "data_time": 0.00661, "loss_cls": 0.27863, "loss_bbox": 0.50203, "loss_dir": 0.03235, "loss": 0.81301, "grad_norm": 1.13281, "time": 0.15421}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.003, "memory": 1661, "data_time": 0.00631, "loss_cls": 0.26881, "loss_bbox": 0.5039, "loss_dir": 0.03209, "loss": 0.8048, "grad_norm": 1.06276, "time": 0.15538}
{"mode": "train", "epoch": 5, "iter": 250, "lr": 0.003, "memory": 1661, "data_time": 0.00625, "loss_cls": 0.26826, "loss_bbox": 0.50363, "loss_dir": 0.03139, "loss": 0.80328, "grad_norm": 1.11589, "time": 0.18283}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.003, "memory": 1661, "data_time": 0.00678, "loss_cls": 0.25642, "loss_bbox": 0.47295, "loss_dir": 0.03086, "loss": 0.76024, "grad_norm": 1.04156, "time": 0.15219}
{"mode": "val", "epoch": 5, "iter": 324, "lr": 0.003, "KITTI/Pedestrian_3D_easy_strict": 7.24466, "KITTI/Pedestrian_BEV_easy_strict": 15.75377, "KITTI/Pedestrian_2D_easy_strict": 24.35241, "KITTI/Pedestrian_3D_moderate_strict": 7.18659, "KITTI/Pedestrian_BEV_moderate_strict": 14.91989, "KITTI/Pedestrian_2D_moderate_strict": 24.26122, "KITTI/Pedestrian_3D_hard_strict": 7.19638, "KITTI/Pedestrian_BEV_hard_strict": 14.82013, "KITTI/Pedestrian_2D_hard_strict": 24.16488, "KITTI/Pedestrian_3D_easy_loose": 32.75698, "KITTI/Pedestrian_BEV_easy_loose": 40.51362, "KITTI/Pedestrian_2D_easy_loose": 45.38285, "KITTI/Pedestrian_3D_moderate_loose": 33.73513, "KITTI/Pedestrian_BEV_moderate_loose": 42.76918, "KITTI/Pedestrian_2D_moderate_loose": 49.22729, "KITTI/Pedestrian_3D_hard_loose": 33.62665, "KITTI/Pedestrian_BEV_hard_loose": 42.68626, "KITTI/Pedestrian_2D_hard_loose": 49.3028, "KITTI/Cyclist_3D_easy_strict": 14.82602, "KITTI/Cyclist_BEV_easy_strict": 23.8371, "KITTI/Cyclist_2D_easy_strict": 34.77732, "KITTI/Cyclist_3D_moderate_strict": 11.89723, "KITTI/Cyclist_BEV_moderate_strict": 20.14685, "KITTI/Cyclist_2D_moderate_strict": 29.62724, "KITTI/Cyclist_3D_hard_strict": 11.89868, "KITTI/Cyclist_BEV_hard_strict": 20.0818, "KITTI/Cyclist_2D_hard_strict": 29.63246, "KITTI/Cyclist_3D_easy_loose": 53.44034, "KITTI/Cyclist_BEV_easy_loose": 59.03745, "KITTI/Cyclist_2D_easy_loose": 64.01596, "KITTI/Cyclist_3D_moderate_loose": 46.80133, "KITTI/Cyclist_BEV_moderate_loose": 55.36065, "KITTI/Cyclist_2D_moderate_loose": 58.86169, "KITTI/Cyclist_3D_hard_loose": 46.78112, "KITTI/Cyclist_BEV_hard_loose": 55.40005, "KITTI/Cyclist_2D_hard_loose": 58.91962, "KITTI/Car_3D_easy_strict": 42.00123, "KITTI/Car_BEV_easy_strict": 49.51147, "KITTI/Car_2D_easy_strict": 47.00069, "KITTI/Car_3D_moderate_strict": 31.78172, "KITTI/Car_BEV_moderate_strict": 41.23027, "KITTI/Car_2D_moderate_strict": 37.71145, "KITTI/Car_3D_hard_strict": 31.56734, "KITTI/Car_BEV_hard_strict": 41.1717, "KITTI/Car_2D_hard_strict": 37.74222, "KITTI/Car_3D_easy_loose": 48.88521, "KITTI/Car_BEV_easy_loose": 55.29207, "KITTI/Car_2D_easy_loose": 49.02628, "KITTI/Car_3D_moderate_loose": 40.13168, "KITTI/Car_BEV_moderate_loose": 48.21221, "KITTI/Car_2D_moderate_loose": 46.6582, "KITTI/Car_3D_hard_loose": 39.90901, "KITTI/Car_BEV_hard_loose": 48.17882, "KITTI/Car_2D_hard_loose": 46.74868, "KITTI/Overall_3D_easy": 42.73285, "KITTI/Overall_BEV_easy": 49.68751, "KITTI/Overall_2D_easy": 52.13317, "KITTI/Overall_3D_moderate": 37.43939, "KITTI/Overall_BEV_moderate": 46.45337, "KITTI/Overall_2D_moderate": 48.60014, "KITTI/Overall_3D_hard": 37.32504, "KITTI/Overall_BEV_hard": 46.41934, "KITTI/Overall_2D_hard": 48.65488}
